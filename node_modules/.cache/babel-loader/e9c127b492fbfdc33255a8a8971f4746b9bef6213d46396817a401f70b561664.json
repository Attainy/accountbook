{"ast":null,"code":"var _jsxFileName = \"/Users/berry/Desktop/\\u1109\\u1172\\u1111\\u1165\\u110F\\u1169\\u1103\\u1175\\u11BC/React/accountbook/src/components/SortButtons.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SortButtons({\n  setSortFilter,\n  categoryOptions,\n  sortOptions\n}) {\n  const handleSort = event => {\n    console.log(event.target.className);\n  };\n\n  // const filterCategory = (event) => {\n  //     if (event.target.value !== 'all') {\n  //         setSortedData(sortedData.filter(item => item.category === event.target.value));\n  //         console.log(sortedData)\n  //     }\n  // }\n\n  // const sortBy = (event) => {\n  //     console.log(event.target.value);\n  //     switch (event.target.value) {\n  //         case '가격 높은 순':\n  //             setSortedData(prev => {\n  //                 return prev.sort((a, b) => b.price - a.price)\n  //             });\n  //             break;\n  //         case '가격 낮은 순':\n  //             setSortedData(prev => {\n  //                 return prev.sort((a, b) => a.price - b.price)\n  //             });\n  //             break;\n  //         case '최신 순':\n  //             setSortedData(prev => prev.sort((a, b) => new Date(b) - new Date(a)))\n  //             break;\n  //         case '오래된 순':\n  //             setSortedData(prev => prev.sort((a, b) => new Date(a) - new Date(b)))\n  //             break;\n  //     }\n  //     console.log(sortedData)\n  // }\n\n  // const sortStartDate = (event) => {\n  //     setSortedData(sortedData.filter(item => new Date(item.date) >= new Date(event.target.value)))\n  // }\n\n  // const sortEndDate = (event) => {\n  //     setSortedData(sortedData.filter(item => new Date(item.date) <= new Date(event.target.value)))\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sort-buttons\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"sort-buttons__button--category\",\n      name: \"category\",\n      onChange: handleSort,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"\\uC720\\uD615 \\uD544\\uD130\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), categoryOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: `${option}`,\n        children: option\n      }, `cat-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"sort-buttons__button--sort\",\n      name: \"sort\",\n      onChange: handleSort,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"id\",\n        children: \"\\uC815\\uB82C \\uAE30\\uC900\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), sortOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: `${option}`,\n        children: option\n      }, `sort-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"start-date\",\n        children: \"\\uC2DC\\uC791 \\uAE30\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"start-date\",\n        name: \"startDate\",\n        onChange: handleSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"end-date\",\n        children: \"\\uB05D \\uAE30\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"end-date\",\n        name: \"endDate\",\n        onChange: handleSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"reset\",\n      children: \"RESET\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_c = SortButtons;\nexport default SortButtons;\nvar _c;\n$RefreshReg$(_c, \"SortButtons\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SortButtons","setSortFilter","categoryOptions","sortOptions","handleSort","event","console","log","target","className","children","name","onChange","value","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","htmlFor","type","id","_c","$RefreshReg$"],"sources":["/Users/berry/Desktop/슈퍼코딩/React/accountbook/src/components/SortButtons.js"],"sourcesContent":["import React from 'react'\n\nfunction SortButtons({ setSortFilter, categoryOptions, sortOptions }) {\n\n    const handleSort = (event) => {\n        console.log(event.target.className)\n    }\n\n    // const filterCategory = (event) => {\n    //     if (event.target.value !== 'all') {\n    //         setSortedData(sortedData.filter(item => item.category === event.target.value));\n    //         console.log(sortedData)\n    //     }\n    // }\n\n    // const sortBy = (event) => {\n    //     console.log(event.target.value);\n    //     switch (event.target.value) {\n    //         case '가격 높은 순':\n    //             setSortedData(prev => {\n    //                 return prev.sort((a, b) => b.price - a.price)\n    //             });\n    //             break;\n    //         case '가격 낮은 순':\n    //             setSortedData(prev => {\n    //                 return prev.sort((a, b) => a.price - b.price)\n    //             });\n    //             break;\n    //         case '최신 순':\n    //             setSortedData(prev => prev.sort((a, b) => new Date(b) - new Date(a)))\n    //             break;\n    //         case '오래된 순':\n    //             setSortedData(prev => prev.sort((a, b) => new Date(a) - new Date(b)))\n    //             break;\n    //     }\n    //     console.log(sortedData)\n    // }\n\n    // const sortStartDate = (event) => {\n    //     setSortedData(sortedData.filter(item => new Date(item.date) >= new Date(event.target.value)))\n    // }\n\n    // const sortEndDate = (event) => {\n    //     setSortedData(sortedData.filter(item => new Date(item.date) <= new Date(event.target.value)))\n    // }\n\n\n  return (\n    <div className='sort-buttons'>\n        {/* <select className='sort-buttons__button--category' onChange={(event) => dispatch({ type:'category', payload:event.target.value })}> */}\n        <select className='sort-buttons__button--category' name='category' onChange={handleSort}>\n            <option value='all'>유형 필터</option>\n            {\n                categoryOptions.map((option, index) => (\n                    <option key={`cat-${index}`} value={`${option}`}>{option}</option>\n                ))\n            }\n        </select>\n\n        {/* <select className='sort-buttons__button--sort' onChange={(event) => dispatch({ type:'sortOrder', payload:event.target.value })}> */}\n        <select className='sort-buttons__button--sort' name='sort' onChange={handleSort}>\n            <option value='id'>정렬 기준</option>\n            {\n                sortOptions.map((option, index) => (\n                    <option key={`sort-${index}`} value={`${option}`}>{option}</option>\n                ))\n            }\n        </select>\n\n        <div>\n            <label htmlFor=\"start-date\">시작 기간</label>\n            {/* <input type=\"date\" id=\"start-date\" onChange={(event) => dispatch({ type:'startDate', payload:event.target.value })}/> */}\n            <input type=\"date\" id=\"start-date\" name='startDate' onChange={handleSort}/>\n        </div>\n\n        <div>\n            <label htmlFor=\"end-date\">끝 기간</label>\n            {/* <input type=\"date\" id=\"end-date\" onChange={(event) => dispatch({ type:'endDate', payload:event.target.value })}/> */}\n            <input type=\"date\" id=\"end-date\" name='endDate' onChange={handleSort}/>\n        </div>\n\n        <button type=\"reset\">RESET</button>\n    </div>\n  )\n}\n\nexport default SortButtons"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}